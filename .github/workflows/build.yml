name: Go CI

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 0 * * 0"

jobs:
  lint:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Linter
      uses: reviewdog/action-golangci-lint@v2
      with:
        golangci_lint_flags: "--enable-all --exclude-use-default=false"

  commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: ahmadnassri/action-commit-lint@v2

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.22.0'
    - name: Go version
      run: |
        go version
        go env
    - name: Test
      run: go test -cover ./...

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '>=1.22.0'
    - name: Go version
      run: |
        go version
        go env
    - name: Build
      if: startsWith(github.ref, 'refs/tags/') != true
      env:
        CGO_ENABLED: "0"
      run: |
        echo "::group::Linux build"
        GOOS=linux   GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_SHA:0:7}" -a -tags netgo -o ./release/linux/amd64/reqcheck ./cmd/reqcheck
        echo "::group::Darwin build"
        GOOS=darwin  GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_SHA:0:7}" -a -tags netgo -o ./release/darwin/amd64/reqcheck ./cmd/reqcheck        
        echo "::group::Windows build"
        GOOS=windows GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_SHA:0:7}" -a -tags netgo -o ./release/windows/amd64/reqcheck.exe ./cmd/reqcheck
    - name: Build Tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        echo "::group::Linux build"
        GOOS=linux   GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_REF_NAME}" -a -tags netgo -o release/linux/amd64/reqcheck ./cmd/reqcheck
        echo "::group::Darwin build"
        GOOS=darwin  GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_REF_NAME}" -a -tags netgo -o release/darwin/amd64/reqcheck ./cmd/reqcheck
        echo "::group::Windows build"
        GOOS=windows GOARCH=amd64 go build -v -ldflags "-X main.version=${GITHUB_REF_NAME}" -a -tags netgo -o release/windows/amd64/reqcheck.exe ./cmd/reqcheck
    - name: Executable
      run: ./release/linux/amd64/reqcheck --help
    - name: Package tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        tar -cvzf ./release/reqcheck_linux_amd64.tar.gz -C ./release/linux/amd64 reqcheck
        tar -cvzf ./release/reqcheck_darwin_amd64.tar.gz -C ./release/darwin/amd64 reqcheck
        tar -cvzf ./release/reqcheck_windows_amd64.tar.gz -C ./release/windows/amd64 reqcheck.exe
    - name: Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          release/reqcheck_linux_amd64.tar.gz
          release/reqcheck_darwin_amd64.tar.gz
          release/reqcheck_windows_amd64.tar.gz
          release/windows/amd64/reqcheck.exe
        prerelease: ${{ contains(github.ref, '-dev') }}
