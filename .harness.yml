---
default: {}
stages:
- name: testing
  spec:
    clone: {}
    runtime:
      spec: {}
      type: machine
    steps:
    - name: environment
      spec:
        image: golang:1.20
        pull: always
        run: |-
          go version
          go env
      type: script
    - name: lint
      spec:
        image: golang:1.20
        run: |-
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint version
          golangci-lint run
      type: script
    - name: test
      spec:
        image: golang:1.20
        run: go test -cover ./...
      type: script
  type: ci
  when:
  - ref:
      in:
      - refs/heads/master
      - refs/tags/**
      - refs/pull/**
- name: build
  spec:
    clone: {}
    runtime:
      spec: {}
      type: machine
    steps:
    - name: environment
      spec:
        image: golang:1.20
        pull: always
        run: |-
          go version
          go env
      type: script
    - name: build
      spec:
        envs:
          CGO_ENABLED: "0"
        image: golang:1.20
        run: |-
          GOOS=linux   GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:7}" -a -tags netgo -o release/linux/amd64/reqcheck ./cmd/reqcheck
          GOOS=darwin  GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:7}" -a -tags netgo -o release/darwin/adm64/reqcheck ./cmd/reqcheck
          GOOS=windows GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_COMMIT_SHA:0:7}" -a -tags netgo -o release/windows/amd64/reqcheck.exe ./cmd/reqcheck
      type: script
      when:
      - event:
          not:
            in:
            - tag
    - name: build-tag
      spec:
        envs:
          CGO_ENABLED: "0"
        image: golang:1.20
        run: |-
          GOOS=linux   GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_SEMVER_SHORT}" -a -tags netgo -o release/linux/amd64/reqcheck ./cmd/reqcheck
          GOOS=darwin  GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_SEMVER_SHORT}" -a -tags netgo -o release/darwin/amd64/reqcheck ./cmd/reqcheck
          GOOS=windows GOARCH=amd64 go build -v -ldflags "-X main.version=${DRONE_SEMVER_SHORT}" -a -tags netgo -o release/windows/amd64/reqcheck.exe ./cmd/reqcheck
      type: script
      when:
      - event:
          in:
          - tag
    - name: package-tag
      spec:
        image: golang:1.20
        run: |-
          tar -cvzf release/reqcheck_linux_amd64.tar.gz -C release/linux/amd64 reqcheck
          tar -cvzf release/reqcheck_darwin_amd64.tar.gz -C release/darwin/amd64 reqcheck
          tar -cvzf release/reqcheck_windows_amd64.tar.gz -C release/windows/amd64 reqcheck.exe
      type: script
      when:
      - event:
          in:
          - tag
    - name: executable
      spec:
        image: golang:1.20
        run: ./release/linux/amd64/reqcheck --help
      type: script
    - name: release
      spec:
        image: plugins/github-release
        with:
          api_key: <+ secrets.getValue("github_token") >
          files:
          - release/reqcheck_linux_amd64.tar.gz
          - release/reqcheck_darwin_amd64.tar.gz
          - release/reqcheck_windows_amd64.tar.gz
          - release/windows/amd64/reqcheck.exe
      type: plugin
      when:
      - event:
          in:
          - tag
  type: ci
  when:
  - ref:
      in:
      - refs/heads/master
      - refs/tags/**
      - refs/pull/**
